package com.nsmjsf.web.datamodels;

// Generated Mar 14, 2015 9:52:11 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * UserEnergy generated by hbm2java
 */
@Entity
@Table(name = "user_energy", catalog = "admin_nsmjsf")
public class UserEnergy implements java.io.Serializable {

	private Integer userEnergyId;
	private UserPortfolio userPortfolio;
	private User user;
	private EnergyType energyType;
	private float userEnergyBuyPrice;
	private int userEnergyBuyUnits;
	private int userEnergyUnitsLeft;
	private int userEnergyTotalAmount;
	private Set<UserEnergySales> userEnergySaleses = new HashSet<UserEnergySales>(
			0);

	public UserEnergy() {
	}

	public UserEnergy(UserPortfolio userPortfolio, User user,
			EnergyType energyType, float userEnergyBuyPrice,
			int userEnergyBuyUnits, int userEnergyUnitsLeft,
			int userEnergyTotalAmount) {
		this.userPortfolio = userPortfolio;
		this.user = user;
		this.energyType = energyType;
		this.userEnergyBuyPrice = userEnergyBuyPrice;
		this.userEnergyBuyUnits = userEnergyBuyUnits;
		this.userEnergyUnitsLeft = userEnergyUnitsLeft;
		this.userEnergyTotalAmount = userEnergyTotalAmount;
	}

	public UserEnergy(UserPortfolio userPortfolio, User user,
			EnergyType energyType, float userEnergyBuyPrice,
			int userEnergyBuyUnits, int userEnergyUnitsLeft,
			int userEnergyTotalAmount, Set<UserEnergySales> userEnergySaleses) {
		this.userPortfolio = userPortfolio;
		this.user = user;
		this.energyType = energyType;
		this.userEnergyBuyPrice = userEnergyBuyPrice;
		this.userEnergyBuyUnits = userEnergyBuyUnits;
		this.userEnergyUnitsLeft = userEnergyUnitsLeft;
		this.userEnergyTotalAmount = userEnergyTotalAmount;
		this.userEnergySaleses = userEnergySaleses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "user_energy_id", unique = true, nullable = false)
	public Integer getUserEnergyId() {
		return this.userEnergyId;
	}

	public void setUserEnergyId(Integer userEnergyId) {
		this.userEnergyId = userEnergyId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_energy_portfolio_id", nullable = false)
	public UserPortfolio getUserPortfolio() {
		return this.userPortfolio;
	}

	public void setUserPortfolio(UserPortfolio userPortfolio) {
		this.userPortfolio = userPortfolio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_energy_user_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_energy_energy_type_id", nullable = false)
	public EnergyType getEnergyType() {
		return this.energyType;
	}

	public void setEnergyType(EnergyType energyType) {
		this.energyType = energyType;
	}

	@Column(name = "user_energy_buy_price", nullable = false, precision = 12, scale = 0)
	public float getUserEnergyBuyPrice() {
		return this.userEnergyBuyPrice;
	}

	public void setUserEnergyBuyPrice(float userEnergyBuyPrice) {
		this.userEnergyBuyPrice = userEnergyBuyPrice;
	}

	@Column(name = "user_energy_buy_units", nullable = false)
	public int getUserEnergyBuyUnits() {
		return this.userEnergyBuyUnits;
	}

	public void setUserEnergyBuyUnits(int userEnergyBuyUnits) {
		this.userEnergyBuyUnits = userEnergyBuyUnits;
	}

	@Column(name = "user_energy_units_left", nullable = false)
	public int getUserEnergyUnitsLeft() {
		return this.userEnergyUnitsLeft;
	}

	public void setUserEnergyUnitsLeft(int userEnergyUnitsLeft) {
		this.userEnergyUnitsLeft = userEnergyUnitsLeft;
	}

	@Column(name = "user_energy_total_amount", nullable = false)
	public int getUserEnergyTotalAmount() {
		return this.userEnergyTotalAmount;
	}

	public void setUserEnergyTotalAmount(int userEnergyTotalAmount) {
		this.userEnergyTotalAmount = userEnergyTotalAmount;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userEnergy")
	public Set<UserEnergySales> getUserEnergySaleses() {
		return this.userEnergySaleses;
	}

	public void setUserEnergySaleses(Set<UserEnergySales> userEnergySaleses) {
		this.userEnergySaleses = userEnergySaleses;
	}

}
