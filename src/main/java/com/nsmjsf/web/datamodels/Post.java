package com.nsmjsf.web.datamodels;

// Generated Feb 28, 2015 3:31:39 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Post generated by hbm2java
 */
@Entity
@Table(name = "post", catalog = "admin_nsmjsf")
public class Post implements java.io.Serializable {

	private Integer postId;
	private Company company;
	private User user;
	private Date postPubDate;
	private String postTitle;
	private String postDetails;
	private String postFeaturedImage;
	private Set<Broker> brokers = new HashSet<Broker>(0);
	private Set<Interview> interviews = new HashSet<Interview>(0);
	private Set<MapPostPost> mapPostPostsForFromPostId = new HashSet<MapPostPost>(
			0);
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<AllotmentResult> allotmentResults = new HashSet<AllotmentResult>(
			0);
	private Set<Announcement> announcements = new HashSet<Announcement>(0);
	private Set<FinancialReport> financialReports = new HashSet<FinancialReport>(
			0);
	private Set<PostLike> postLikes = new HashSet<PostLike>(0);
	private Set<Article> articles = new HashSet<Article>(0);
	private Set<ContentSource> contentSources = new HashSet<ContentSource>(0);
	private Set<CompanyDetail> companyDetails = new HashSet<CompanyDetail>(0);
	private Set<MapPostPost> mapPostPostsForToPostId = new HashSet<MapPostPost>(
			0);
	private Set<Event> events = new HashSet<Event>(0);
	private Set<TodaysPrice> todaysPrices = new HashSet<TodaysPrice>(0);
	private Set<MapPostCompany> mapPostCompanies = new HashSet<MapPostCompany>(
			0);
	private Set<MapPostCategory> mapPostCategories = new HashSet<MapPostCategory>(
			0);
	private Set<PostImage> postImages = new HashSet<PostImage>(0);
	private Set<Company> companies = new HashSet<Company>(0);
	private Set<LatestPrice> latestPrices = new HashSet<LatestPrice>(0);
	private Set<ForumThread> forumThreads = new HashSet<ForumThread>(0);
	private Set<News> newses = new HashSet<News>(0);

	public Post() {
	}

	public Post(Company company, User user, Date postPubDate, String postTitle,
			String postDetails) {
		this.company = company;
		this.user = user;
		this.postPubDate = postPubDate;
		this.postTitle = postTitle;
		this.postDetails = postDetails;
	}

	public Post(Company company, User user, Date postPubDate, String postTitle,
			String postDetails, String postFeaturedImage, Set<Broker> brokers,
			Set<Interview> interviews,
			Set<MapPostPost> mapPostPostsForFromPostId, Set<Comment> comments,
			Set<AllotmentResult> allotmentResults,
			Set<Announcement> announcements,
			Set<FinancialReport> financialReports, Set<PostLike> postLikes,
			Set<Article> articles, Set<ContentSource> contentSources,
			Set<CompanyDetail> companyDetails,
			Set<MapPostPost> mapPostPostsForToPostId, Set<Event> events,
			Set<TodaysPrice> todaysPrices,
			Set<MapPostCompany> mapPostCompanies,
			Set<MapPostCategory> mapPostCategories, Set<PostImage> postImages,
			Set<Company> companies, Set<LatestPrice> latestPrices,
			Set<ForumThread> forumThreads, Set<News> newses) {
		this.company = company;
		this.user = user;
		this.postPubDate = postPubDate;
		this.postTitle = postTitle;
		this.postDetails = postDetails;
		this.postFeaturedImage = postFeaturedImage;
		this.brokers = brokers;
		this.interviews = interviews;
		this.mapPostPostsForFromPostId = mapPostPostsForFromPostId;
		this.comments = comments;
		this.allotmentResults = allotmentResults;
		this.announcements = announcements;
		this.financialReports = financialReports;
		this.postLikes = postLikes;
		this.articles = articles;
		this.contentSources = contentSources;
		this.companyDetails = companyDetails;
		this.mapPostPostsForToPostId = mapPostPostsForToPostId;
		this.events = events;
		this.todaysPrices = todaysPrices;
		this.mapPostCompanies = mapPostCompanies;
		this.mapPostCategories = mapPostCategories;
		this.postImages = postImages;
		this.companies = companies;
		this.latestPrices = latestPrices;
		this.forumThreads = forumThreads;
		this.newses = newses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "post_id", unique = true, nullable = false)
	public Integer getPostId() {
		return this.postId;
	}

	public void setPostId(Integer postId) {
		this.postId = postId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "post_company_id", nullable = false)
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "post_user_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "post_pub_date", nullable = false, length = 0)
	public Date getPostPubDate() {
		return this.postPubDate;
	}

	public void setPostPubDate(Date postPubDate) {
		this.postPubDate = postPubDate;
	}

	@Column(name = "post_title", nullable = false, length = 65535)
	public String getPostTitle() {
		return this.postTitle;
	}

	public void setPostTitle(String postTitle) {
		this.postTitle = postTitle;
	}

	@Column(name = "post_details", nullable = false, length = 16777215)
	public String getPostDetails() {
		return this.postDetails;
	}

	public void setPostDetails(String postDetails) {
		this.postDetails = postDetails;
	}

	@Column(name = "post_featured_image", length = 65535)
	public String getPostFeaturedImage() {
		return this.postFeaturedImage;
	}

	public void setPostFeaturedImage(String postFeaturedImage) {
		this.postFeaturedImage = postFeaturedImage;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<Broker> getBrokers() {
		return this.brokers;
	}

	public void setBrokers(Set<Broker> brokers) {
		this.brokers = brokers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<Interview> getInterviews() {
		return this.interviews;
	}

	public void setInterviews(Set<Interview> interviews) {
		this.interviews = interviews;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "postByFromPostId")
	public Set<MapPostPost> getMapPostPostsForFromPostId() {
		return this.mapPostPostsForFromPostId;
	}

	public void setMapPostPostsForFromPostId(
			Set<MapPostPost> mapPostPostsForFromPostId) {
		this.mapPostPostsForFromPostId = mapPostPostsForFromPostId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<AllotmentResult> getAllotmentResults() {
		return this.allotmentResults;
	}

	public void setAllotmentResults(Set<AllotmentResult> allotmentResults) {
		this.allotmentResults = allotmentResults;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<Announcement> getAnnouncements() {
		return this.announcements;
	}

	public void setAnnouncements(Set<Announcement> announcements) {
		this.announcements = announcements;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<FinancialReport> getFinancialReports() {
		return this.financialReports;
	}

	public void setFinancialReports(Set<FinancialReport> financialReports) {
		this.financialReports = financialReports;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<PostLike> getPostLikes() {
		return this.postLikes;
	}

	public void setPostLikes(Set<PostLike> postLikes) {
		this.postLikes = postLikes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<Article> getArticles() {
		return this.articles;
	}

	public void setArticles(Set<Article> articles) {
		this.articles = articles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<ContentSource> getContentSources() {
		return this.contentSources;
	}

	public void setContentSources(Set<ContentSource> contentSources) {
		this.contentSources = contentSources;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<CompanyDetail> getCompanyDetails() {
		return this.companyDetails;
	}

	public void setCompanyDetails(Set<CompanyDetail> companyDetails) {
		this.companyDetails = companyDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "postByToPostId")
	public Set<MapPostPost> getMapPostPostsForToPostId() {
		return this.mapPostPostsForToPostId;
	}

	public void setMapPostPostsForToPostId(
			Set<MapPostPost> mapPostPostsForToPostId) {
		this.mapPostPostsForToPostId = mapPostPostsForToPostId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<Event> getEvents() {
		return this.events;
	}

	public void setEvents(Set<Event> events) {
		this.events = events;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<TodaysPrice> getTodaysPrices() {
		return this.todaysPrices;
	}

	public void setTodaysPrices(Set<TodaysPrice> todaysPrices) {
		this.todaysPrices = todaysPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<MapPostCompany> getMapPostCompanies() {
		return this.mapPostCompanies;
	}

	public void setMapPostCompanies(Set<MapPostCompany> mapPostCompanies) {
		this.mapPostCompanies = mapPostCompanies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<MapPostCategory> getMapPostCategories() {
		return this.mapPostCategories;
	}

	public void setMapPostCategories(Set<MapPostCategory> mapPostCategories) {
		this.mapPostCategories = mapPostCategories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<PostImage> getPostImages() {
		return this.postImages;
	}

	public void setPostImages(Set<PostImage> postImages) {
		this.postImages = postImages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<Company> getCompanies() {
		return this.companies;
	}

	public void setCompanies(Set<Company> companies) {
		this.companies = companies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<LatestPrice> getLatestPrices() {
		return this.latestPrices;
	}

	public void setLatestPrices(Set<LatestPrice> latestPrices) {
		this.latestPrices = latestPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<ForumThread> getForumThreads() {
		return this.forumThreads;
	}

	public void setForumThreads(Set<ForumThread> forumThreads) {
		this.forumThreads = forumThreads;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<News> getNewses() {
		return this.newses;
	}

	public void setNewses(Set<News> newses) {
		this.newses = newses;
	}

}
