package com.nsmjsf.web.datamodels;

// Generated Mar 2, 2015 3:36:21 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ProfitLoss generated by hbm2java
 */
@Entity
@Table(name = "profit_loss", catalog = "admin_nsmjsf")
public class ProfitLoss implements java.io.Serializable {

	private Integer profitLossId;
	private FinancialReport financialReport;
	private float profitLossInterestIncome;
	private float profitLossInterestExpenses;
	private float profitLossNetInterestIncome;
	private float profitLossFeesCommissionAndDiscount;
	private float profitLossOtherOperatingIncome;
	private float profitLossForeignExchangeGainOrLoss;
	private float profitLossTotalOperatingIncome;
	private float profitLossStaffExpenses;
	private float profitLossOperatingProfitBeforeProvision;
	private float profitLossProvisionForPossibleLosses;
	private float profitLossOperatingProfit;
	private float profitLossNonOperatingIncomeOrLoss;
	private float profitLossWriteBackProvisionForPossibleLosses;
	private float profitLossProfitFromRegularActivities;
	private float profitLossExtraOrdinaryIncomeOrExpenses;
	private float profitLossProfitBeforeBonusAndTaxes;
	private float profitLossProvisionForStaffBonus;
	private float profitLossProvisionForIncomeTax;
	private float profitLossNonControllingInterest;
	private float profitLossNetProfitLoss;
	private float profitLossCapitalFundToRaw;
	private float profitLossNonPerformingLoanToToalLoan;
	private float profitLossTotalLoanLossProvisionToTotalNpl;
	private float profitLossCostOfFund;
	private float profitLossCreditToDepositRatio;
	private float profitLossBaseRatio;
	private float profitLossAverageYieldOnLoanAdvanceInvestment;
	private float profitLossNetInterestSpread;

	public ProfitLoss() {
	}

	public ProfitLoss(FinancialReport financialReport,
			float profitLossInterestIncome, float profitLossInterestExpenses,
			float profitLossNetInterestIncome,
			float profitLossFeesCommissionAndDiscount,
			float profitLossOtherOperatingIncome,
			float profitLossForeignExchangeGainOrLoss,
			float profitLossTotalOperatingIncome,
			float profitLossStaffExpenses,
			float profitLossOperatingProfitBeforeProvision,
			float profitLossProvisionForPossibleLosses,
			float profitLossOperatingProfit,
			float profitLossNonOperatingIncomeOrLoss,
			float profitLossWriteBackProvisionForPossibleLosses,
			float profitLossProfitFromRegularActivities,
			float profitLossExtraOrdinaryIncomeOrExpenses,
			float profitLossProfitBeforeBonusAndTaxes,
			float profitLossProvisionForStaffBonus,
			float profitLossProvisionForIncomeTax,
			float profitLossNonControllingInterest,
			float profitLossNetProfitLoss, float profitLossCapitalFundToRaw,
			float profitLossNonPerformingLoanToToalLoan,
			float profitLossTotalLoanLossProvisionToTotalNpl,
			float profitLossCostOfFund, float profitLossCreditToDepositRatio,
			float profitLossBaseRatio,
			float profitLossAverageYieldOnLoanAdvanceInvestment,
			float profitLossNetInterestSpread) {
		this.financialReport = financialReport;
		this.profitLossInterestIncome = profitLossInterestIncome;
		this.profitLossInterestExpenses = profitLossInterestExpenses;
		this.profitLossNetInterestIncome = profitLossNetInterestIncome;
		this.profitLossFeesCommissionAndDiscount = profitLossFeesCommissionAndDiscount;
		this.profitLossOtherOperatingIncome = profitLossOtherOperatingIncome;
		this.profitLossForeignExchangeGainOrLoss = profitLossForeignExchangeGainOrLoss;
		this.profitLossTotalOperatingIncome = profitLossTotalOperatingIncome;
		this.profitLossStaffExpenses = profitLossStaffExpenses;
		this.profitLossOperatingProfitBeforeProvision = profitLossOperatingProfitBeforeProvision;
		this.profitLossProvisionForPossibleLosses = profitLossProvisionForPossibleLosses;
		this.profitLossOperatingProfit = profitLossOperatingProfit;
		this.profitLossNonOperatingIncomeOrLoss = profitLossNonOperatingIncomeOrLoss;
		this.profitLossWriteBackProvisionForPossibleLosses = profitLossWriteBackProvisionForPossibleLosses;
		this.profitLossProfitFromRegularActivities = profitLossProfitFromRegularActivities;
		this.profitLossExtraOrdinaryIncomeOrExpenses = profitLossExtraOrdinaryIncomeOrExpenses;
		this.profitLossProfitBeforeBonusAndTaxes = profitLossProfitBeforeBonusAndTaxes;
		this.profitLossProvisionForStaffBonus = profitLossProvisionForStaffBonus;
		this.profitLossProvisionForIncomeTax = profitLossProvisionForIncomeTax;
		this.profitLossNonControllingInterest = profitLossNonControllingInterest;
		this.profitLossNetProfitLoss = profitLossNetProfitLoss;
		this.profitLossCapitalFundToRaw = profitLossCapitalFundToRaw;
		this.profitLossNonPerformingLoanToToalLoan = profitLossNonPerformingLoanToToalLoan;
		this.profitLossTotalLoanLossProvisionToTotalNpl = profitLossTotalLoanLossProvisionToTotalNpl;
		this.profitLossCostOfFund = profitLossCostOfFund;
		this.profitLossCreditToDepositRatio = profitLossCreditToDepositRatio;
		this.profitLossBaseRatio = profitLossBaseRatio;
		this.profitLossAverageYieldOnLoanAdvanceInvestment = profitLossAverageYieldOnLoanAdvanceInvestment;
		this.profitLossNetInterestSpread = profitLossNetInterestSpread;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "profit_loss_id", unique = true, nullable = false)
	public Integer getProfitLossId() {
		return this.profitLossId;
	}

	public void setProfitLossId(Integer profitLossId) {
		this.profitLossId = profitLossId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "profit_loss_financial_report_id", nullable = false)
	public FinancialReport getFinancialReport() {
		return this.financialReport;
	}

	public void setFinancialReport(FinancialReport financialReport) {
		this.financialReport = financialReport;
	}

	@Column(name = "profit_loss_interest_income", nullable = false, precision = 12, scale = 0)
	public float getProfitLossInterestIncome() {
		return this.profitLossInterestIncome;
	}

	public void setProfitLossInterestIncome(float profitLossInterestIncome) {
		this.profitLossInterestIncome = profitLossInterestIncome;
	}

	@Column(name = "profit_loss_interest_expenses", nullable = false, precision = 12, scale = 0)
	public float getProfitLossInterestExpenses() {
		return this.profitLossInterestExpenses;
	}

	public void setProfitLossInterestExpenses(float profitLossInterestExpenses) {
		this.profitLossInterestExpenses = profitLossInterestExpenses;
	}

	@Column(name = "profit_loss_net_interest_income", nullable = false, precision = 12, scale = 0)
	public float getProfitLossNetInterestIncome() {
		return this.profitLossNetInterestIncome;
	}

	public void setProfitLossNetInterestIncome(float profitLossNetInterestIncome) {
		this.profitLossNetInterestIncome = profitLossNetInterestIncome;
	}

	@Column(name = "profit_loss_fees_commission_and_discount", nullable = false, precision = 12, scale = 0)
	public float getProfitLossFeesCommissionAndDiscount() {
		return this.profitLossFeesCommissionAndDiscount;
	}

	public void setProfitLossFeesCommissionAndDiscount(
			float profitLossFeesCommissionAndDiscount) {
		this.profitLossFeesCommissionAndDiscount = profitLossFeesCommissionAndDiscount;
	}

	@Column(name = "profit_loss_other_operating_income", nullable = false, precision = 12, scale = 0)
	public float getProfitLossOtherOperatingIncome() {
		return this.profitLossOtherOperatingIncome;
	}

	public void setProfitLossOtherOperatingIncome(
			float profitLossOtherOperatingIncome) {
		this.profitLossOtherOperatingIncome = profitLossOtherOperatingIncome;
	}

	@Column(name = "profit_loss_foreign_exchange_gain_or_loss", nullable = false, precision = 12, scale = 0)
	public float getProfitLossForeignExchangeGainOrLoss() {
		return this.profitLossForeignExchangeGainOrLoss;
	}

	public void setProfitLossForeignExchangeGainOrLoss(
			float profitLossForeignExchangeGainOrLoss) {
		this.profitLossForeignExchangeGainOrLoss = profitLossForeignExchangeGainOrLoss;
	}

	@Column(name = "profit_loss_total_operating_income", nullable = false, precision = 12, scale = 0)
	public float getProfitLossTotalOperatingIncome() {
		return this.profitLossTotalOperatingIncome;
	}

	public void setProfitLossTotalOperatingIncome(
			float profitLossTotalOperatingIncome) {
		this.profitLossTotalOperatingIncome = profitLossTotalOperatingIncome;
	}

	@Column(name = "profit_loss_staff_expenses", nullable = false, precision = 12, scale = 0)
	public float getProfitLossStaffExpenses() {
		return this.profitLossStaffExpenses;
	}

	public void setProfitLossStaffExpenses(float profitLossStaffExpenses) {
		this.profitLossStaffExpenses = profitLossStaffExpenses;
	}

	@Column(name = "profit_loss_operating_profit_before_provision", nullable = false, precision = 12, scale = 0)
	public float getProfitLossOperatingProfitBeforeProvision() {
		return this.profitLossOperatingProfitBeforeProvision;
	}

	public void setProfitLossOperatingProfitBeforeProvision(
			float profitLossOperatingProfitBeforeProvision) {
		this.profitLossOperatingProfitBeforeProvision = profitLossOperatingProfitBeforeProvision;
	}

	@Column(name = "profit_loss_provision_for_possible_losses", nullable = false, precision = 12, scale = 0)
	public float getProfitLossProvisionForPossibleLosses() {
		return this.profitLossProvisionForPossibleLosses;
	}

	public void setProfitLossProvisionForPossibleLosses(
			float profitLossProvisionForPossibleLosses) {
		this.profitLossProvisionForPossibleLosses = profitLossProvisionForPossibleLosses;
	}

	@Column(name = "profit_loss_operating_profit", nullable = false, precision = 12, scale = 0)
	public float getProfitLossOperatingProfit() {
		return this.profitLossOperatingProfit;
	}

	public void setProfitLossOperatingProfit(float profitLossOperatingProfit) {
		this.profitLossOperatingProfit = profitLossOperatingProfit;
	}

	@Column(name = "profit_loss_non_operating_income_or_loss", nullable = false, precision = 12, scale = 0)
	public float getProfitLossNonOperatingIncomeOrLoss() {
		return this.profitLossNonOperatingIncomeOrLoss;
	}

	public void setProfitLossNonOperatingIncomeOrLoss(
			float profitLossNonOperatingIncomeOrLoss) {
		this.profitLossNonOperatingIncomeOrLoss = profitLossNonOperatingIncomeOrLoss;
	}

	@Column(name = "profit_loss_write_back_provision_for_possible_losses", nullable = false, precision = 12, scale = 0)
	public float getProfitLossWriteBackProvisionForPossibleLosses() {
		return this.profitLossWriteBackProvisionForPossibleLosses;
	}

	public void setProfitLossWriteBackProvisionForPossibleLosses(
			float profitLossWriteBackProvisionForPossibleLosses) {
		this.profitLossWriteBackProvisionForPossibleLosses = profitLossWriteBackProvisionForPossibleLosses;
	}

	@Column(name = "profit_loss_profit_from_regular_activities", nullable = false, precision = 12, scale = 0)
	public float getProfitLossProfitFromRegularActivities() {
		return this.profitLossProfitFromRegularActivities;
	}

	public void setProfitLossProfitFromRegularActivities(
			float profitLossProfitFromRegularActivities) {
		this.profitLossProfitFromRegularActivities = profitLossProfitFromRegularActivities;
	}

	@Column(name = "profit_loss_extra_ordinary_income_or_expenses", nullable = false, precision = 12, scale = 0)
	public float getProfitLossExtraOrdinaryIncomeOrExpenses() {
		return this.profitLossExtraOrdinaryIncomeOrExpenses;
	}

	public void setProfitLossExtraOrdinaryIncomeOrExpenses(
			float profitLossExtraOrdinaryIncomeOrExpenses) {
		this.profitLossExtraOrdinaryIncomeOrExpenses = profitLossExtraOrdinaryIncomeOrExpenses;
	}

	@Column(name = "profit_loss_profit_before_bonus_and_taxes", nullable = false, precision = 12, scale = 0)
	public float getProfitLossProfitBeforeBonusAndTaxes() {
		return this.profitLossProfitBeforeBonusAndTaxes;
	}

	public void setProfitLossProfitBeforeBonusAndTaxes(
			float profitLossProfitBeforeBonusAndTaxes) {
		this.profitLossProfitBeforeBonusAndTaxes = profitLossProfitBeforeBonusAndTaxes;
	}

	@Column(name = "profit_loss_provision_for_staff_bonus", nullable = false, precision = 12, scale = 0)
	public float getProfitLossProvisionForStaffBonus() {
		return this.profitLossProvisionForStaffBonus;
	}

	public void setProfitLossProvisionForStaffBonus(
			float profitLossProvisionForStaffBonus) {
		this.profitLossProvisionForStaffBonus = profitLossProvisionForStaffBonus;
	}

	@Column(name = "profit_loss_provision_for_income_tax", nullable = false, precision = 12, scale = 0)
	public float getProfitLossProvisionForIncomeTax() {
		return this.profitLossProvisionForIncomeTax;
	}

	public void setProfitLossProvisionForIncomeTax(
			float profitLossProvisionForIncomeTax) {
		this.profitLossProvisionForIncomeTax = profitLossProvisionForIncomeTax;
	}

	@Column(name = "profit_loss_non_controlling_interest", nullable = false, precision = 12, scale = 0)
	public float getProfitLossNonControllingInterest() {
		return this.profitLossNonControllingInterest;
	}

	public void setProfitLossNonControllingInterest(
			float profitLossNonControllingInterest) {
		this.profitLossNonControllingInterest = profitLossNonControllingInterest;
	}

	@Column(name = "profit_loss_net_profit_loss", nullable = false, precision = 12, scale = 0)
	public float getProfitLossNetProfitLoss() {
		return this.profitLossNetProfitLoss;
	}

	public void setProfitLossNetProfitLoss(float profitLossNetProfitLoss) {
		this.profitLossNetProfitLoss = profitLossNetProfitLoss;
	}

	@Column(name = "profit_loss_capital_fund_to_raw", nullable = false, precision = 12, scale = 0)
	public float getProfitLossCapitalFundToRaw() {
		return this.profitLossCapitalFundToRaw;
	}

	public void setProfitLossCapitalFundToRaw(float profitLossCapitalFundToRaw) {
		this.profitLossCapitalFundToRaw = profitLossCapitalFundToRaw;
	}

	@Column(name = "profit_loss_non_performing_loan_to_toal_loan", nullable = false, precision = 12, scale = 0)
	public float getProfitLossNonPerformingLoanToToalLoan() {
		return this.profitLossNonPerformingLoanToToalLoan;
	}

	public void setProfitLossNonPerformingLoanToToalLoan(
			float profitLossNonPerformingLoanToToalLoan) {
		this.profitLossNonPerformingLoanToToalLoan = profitLossNonPerformingLoanToToalLoan;
	}

	@Column(name = "profit_loss_total_loan_loss_provision_to_total_npl", nullable = false, precision = 12, scale = 0)
	public float getProfitLossTotalLoanLossProvisionToTotalNpl() {
		return this.profitLossTotalLoanLossProvisionToTotalNpl;
	}

	public void setProfitLossTotalLoanLossProvisionToTotalNpl(
			float profitLossTotalLoanLossProvisionToTotalNpl) {
		this.profitLossTotalLoanLossProvisionToTotalNpl = profitLossTotalLoanLossProvisionToTotalNpl;
	}

	@Column(name = "profit_loss_cost_of_fund", nullable = false, precision = 12, scale = 0)
	public float getProfitLossCostOfFund() {
		return this.profitLossCostOfFund;
	}

	public void setProfitLossCostOfFund(float profitLossCostOfFund) {
		this.profitLossCostOfFund = profitLossCostOfFund;
	}

	@Column(name = "profit_loss_credit_to_deposit_ratio", nullable = false, precision = 12, scale = 0)
	public float getProfitLossCreditToDepositRatio() {
		return this.profitLossCreditToDepositRatio;
	}

	public void setProfitLossCreditToDepositRatio(
			float profitLossCreditToDepositRatio) {
		this.profitLossCreditToDepositRatio = profitLossCreditToDepositRatio;
	}

	@Column(name = "profit_loss_base_ratio", nullable = false, precision = 12, scale = 0)
	public float getProfitLossBaseRatio() {
		return this.profitLossBaseRatio;
	}

	public void setProfitLossBaseRatio(float profitLossBaseRatio) {
		this.profitLossBaseRatio = profitLossBaseRatio;
	}

	@Column(name = "profit_loss_average_yield_on_loan_advance_investment", nullable = false, precision = 12, scale = 0)
	public float getProfitLossAverageYieldOnLoanAdvanceInvestment() {
		return this.profitLossAverageYieldOnLoanAdvanceInvestment;
	}

	public void setProfitLossAverageYieldOnLoanAdvanceInvestment(
			float profitLossAverageYieldOnLoanAdvanceInvestment) {
		this.profitLossAverageYieldOnLoanAdvanceInvestment = profitLossAverageYieldOnLoanAdvanceInvestment;
	}

	@Column(name = "profit_loss_net_interest_spread", nullable = false, precision = 12, scale = 0)
	public float getProfitLossNetInterestSpread() {
		return this.profitLossNetInterestSpread;
	}

	public void setProfitLossNetInterestSpread(float profitLossNetInterestSpread) {
		this.profitLossNetInterestSpread = profitLossNetInterestSpread;
	}

}
